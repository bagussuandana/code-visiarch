"use strict";(self.webpackChunkcode_visiarch=self.webpackChunkcode_visiarch||[]).push([[932],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=u(t),m=a,g=c["".concat(l,".").concat(m)]||c[m]||p[m]||s;return t?r.createElement(g,o(o({ref:n},d),{},{components:t})):r.createElement(g,o({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=c;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<s;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4771:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=t(7462),a=t(3366),s=(t(7294),t(3905)),o=["components"],i={sidebar_position:1},l="Level 2",u={unversionedId:"Express/level-2",id:"Express/level-2",title:"Level 2",description:".env .env.example",source:"@site/docs/Express/level-2.md",sourceDirName:"Express",slug:"/Express/level-2",permalink:"/docs/Express/level-2",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Level 1",permalink:"/docs/Express/level-1"},next:{title:"GIT",permalink:"/docs/Git/allgit"}},d={},p=[{value:".env .env.example",id:"env-envexample",level:2},{value:"routes/user.js",id:"routesuserjs",level:2},{value:"controllers/auth.js",id:"controllersauthjs",level:2},{value:"middlewares/jwt.js",id:"middlewaresjwtjs",level:2},{value:"libs/form.js",id:"libsformjs",level:2},{value:"services/auth.js",id:"servicesauthjs",level:2},{value:"migration",id:"migration",level:2},{value:"config",id:"config",level:2},{value:"models",id:"models",level:2},{value:"models/auth.js",id:"modelsauthjs",level:3},{value:"database",id:"database",level:2},{value:"database.js",id:"databasejs",level:3},{value:"Update",id:"update",level:2},{value:"app.js",id:"appjs",level:2}],c={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"level-2"},"Level 2"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --global yarn\nyarn\n")),(0,s.kt)("h2",{id:"env-envexample"},".env .env.example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'NODE_ENV=development\nPORT=8000\n\n# Authentication\nJWT_SECRET=visiarch1@\nJWT_REFRESH_SECRET=visiarch1@\nJWT_ALGORITHM=HS256\nJWT_ISSUER=api.visiarch.com\nJWT_EXPIRATION=3600\nJWT_REFRESH_EXPIRATION=86400\n\n# Database\nDATABASE_CLIENT="mysql"\nDATABASE_HOST=127.0.0.1\nDATABASE_PORT=3306\nDATABASE_USER=root\nDATABASE_PASSWORD=\nDATABASE_DATABASE=gbs-research\n')),(0,s.kt)("h2",{id:"routesuserjs"},"routes/user.js"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Router } from "express";\n\nconst routes = Router();\n\nimport * as auth from "../controllers/auth";\nimport jwtMiddleware from "../middlewares/jwt";\n\nroutes.post("/signup", auth.register);\nroutes.post("/login", auth.login);\nroutes.get("/me", jwtMiddleware, auth.me);\n\nexport default routes;\n')),(0,s.kt)("h2",{id:"controllersauthjs"},"controllers/auth.js"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'import validate from "../libs/form";\nimport * as auth from "../services/auth";\n\nexport const register = async (req, res) => {\n  const rules = {\n    first_name: "required",\n    last_name: "required",\n    email: "required|email",\n    password: "required|min:8",\n  };\n  const errors = await validate(req.body, rules);\n\n  if (errors) {\n    return res.json({\n      status: false,\n      message: errors,\n    });\n  }\n\n  try {\n    const repo = await auth.register(req.body);\n    return res.json({\n      status: true,\n      data: repo,\n    });\n  } catch (error) {\n    return res.json({\n      status: false,\n      message: error.toString(),\n    });\n  }\n};\n\nexport const login = async (req, res) => {\n  const rules = {\n    email: "required|email",\n    password: "required|min:8",\n  };\n  const errors = await validate(req.body, rules);\n\n  if (errors) {\n    return res.json({\n      status: false,\n      message: errors,\n    });\n  }\n\n  try {\n    const repo = await auth.login(req.body);\n    return res.json({\n      status: true,\n      data: repo,\n    });\n  } catch (error) {\n    return res.json({\n      status: false,\n      message: error.toString(),\n    });\n  }\n};\n\nexport const me = async (req, res) => {\n  try {\n    const repo = await auth.me(req.auth);\n    return res.json({\n      status: true,\n      data: repo,\n    });\n  } catch (error) {\n    return res.json({\n      status: false,\n      message: error.toString(),\n    });\n  }\n};\n')),(0,s.kt)("h2",{id:"middlewaresjwtjs"},"middlewares/jwt.js"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'import config from "../config";\nvar { expressjwt: jwt } = require("express-jwt");\n\nconst jwtMiddleware = jwt({\n  secret: config.jwt.SECRET,\n  algorithms: [config.jwt.ALGORITHM],\n  issuer: config.jwt.ISSUER,\n});\n\nexport default jwtMiddleware;\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add express-jwt\n")),(0,s.kt)("h2",{id:"libsformjs"},"libs/form.js"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'import { validator } from "indicative";\n\nexport const validateAll = async (data, rules) => {\n  return await validator\n    .validateAll(data, rules)\n    .then(() => null)\n    .catch((err) => err);\n};\n\nexport default validateAll;\n')),(0,s.kt)("h2",{id:"servicesauthjs"},"services/auth.js"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'export const me = async (jwtPayload) => {\n  const auth = await Auth.query().findOne({\n    id: jwtPayload.id,\n  });\n\n  if (!auth) {\n    throw Error("Error getting data.");\n  }\n\n  return auth;\n};\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add jsonwebtoken\nyarn add bcrypt\nyarn add nanoid\nyarn add knex\nyarn add objection\nyarn add objection-visibility\nyarn add mysql\nyarn add indicative\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="knex command"',title:'"knex','command"':!0},"knex init\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="knexfile.js"',title:'"knexfile.js"'},'// Update with your config settings.\n\n/**\n * @type { Object.<string, import("knex").Knex.Config> }\n */\nmodule.exports = {\n  development: {\n    client: "mysql",\n    connection: {\n      database: "gbs-research",\n      user: "root",\n      password: "",\n    },\n  },\n\n  staging: {\n    client: "mysql",\n    connection: {\n      database: "gbs-research-staging",\n      user: "gbs-research",\n      password: "gbssecret",\n    },\n    pool: {\n      min: 2,\n      max: 10,\n    },\n    migrations: {\n      tableName: "knex_migrations",\n    },\n  },\n\n  production: {\n    client: "mysql",\n    connection: {\n      database: "visiarch-api",\n      user: "visiarch",\n      password: "password",\n    },\n    pool: {\n      min: 2,\n      max: 10,\n    },\n    migrations: {\n      tableName: "knex_migrations",\n    },\n  },\n};\n')),(0,s.kt)("h2",{id:"migration"},"migration"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'exports.up = function (knex) {\n  return knex.schema\n    .createTable("authentications", function (table) {\n      table.string("id", 64).notNullable().primary().index();\n\n      table.string("email", 150).index();\n      table.string("password", 150).notNullable();\n      table.string("secret_key", 64);\n      table.string("reset_email_token", 64);\n      table.timestamp("email_verified_at").nullable();\n      table.timestamp("deleted_at").nullable();\n      table.timestamps(true, true);\n    })\n    .createTable("tokens", function (table) {\n      table.string("id", 64).notNullable().primary().index();\n      table.string("auth_id", 64).notNullable();\n      table\n        .foreign("auth_id")\n        .references("id")\n        .inTable("authentications")\n        .onDelete("CASCADE");\n      table.text("refresh_token");\n      table.datetime("expired_at");\n      table.timestamps(true, true);\n      table.datetime("deleted_at");\n    });\n};\n\nexports.down = function (knex) {\n  return knex.schema\n    .dropTableIfExists("authentications")\n    .dropTableIfExists("tokens");\n};\n')),(0,s.kt)("h2",{id:"config"},"config"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="index.js"',title:'"index.js"'},'import app from "./app";\nimport jwt from "./jwt";\nimport db from "./db";\nexport default {\n  app,\n  db,\n  jwt,\n};\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="app.js"',title:'"app.js"'},"const env = process.env;\n\nexport default {\n  ENV: env.NODE_ENV,\n  PORT: +env.PORT,\n};\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="db.js"',title:'"db.js"'},"const env = process.env;\n\nexport default {\n  CLIENT: env.DATABASE_CLIENT,\n  HOST: env.DATABASE_HOST,\n  PORT: env.DATABASE_PORT,\n  USER: env.DATABASE_USER,\n  PASSWORD: env.DATABASE_PASSWORD,\n  DATABASE: env.DATABASE_DATABASE,\n};\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="jwt.js"',title:'"jwt.js"'},"const env = process.env;\n\nexport default {\n  SECRET: env.JWT_SECRET,\n  REFRESH_SECRET: env.JWT_REFRESH_SECRET,\n  ALGORITHM: env.JWT_ALGORITHM,\n  ISSUER: env.JWT_ISSUER,\n  EXPIRATION: env.JWT_EXPIRATION,\n  REFRESH_EXPIRATION: env.JWT_REFRESH_EXPIRATION,\n};\n")),(0,s.kt)("h2",{id:"models"},"models"),(0,s.kt)("h3",{id:"modelsauthjs"},"models/auth.js"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'import { BaseModel } from "../database";\n\nexport class Token extends BaseModel {\n  static tableName = "tokens";\n}\n\nclass Authentication extends BaseModel {\n  static tableName = "authentications";\n\n  static get hidden() {\n    return ["password", "secret_key", "reset_email_token"];\n  }\n\n  static relationMappings = () => ({\n    token: {\n      relation: BaseModel.HasOneRelation,\n      modelClass: Token,\n      join: {\n        from: "authentications.id",\n        to: "tokens.auth_id",\n      },\n    },\n  });\n}\n\nexport default Authentication;\n')),(0,s.kt)("h2",{id:"database"},"database"),(0,s.kt)("h3",{id:"databasejs"},"database.js"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'import knex from "knex";\nimport { Model } from "objection";\nimport visibility from "objection-visibility";\nimport config from "./config";\n\nexport const conn = knex({\n  client: config.db.CLIENT,\n  connection: {\n    host: config.db.HOST,\n    port: config.db.PORT,\n    user: config.db.USER,\n    password: config.db.PASSWORD,\n    database: config.db.DATABASE,\n  },\n});\n\nexport class BaseModel extends visibility(Model) {\n  static get modifiers() {\n    return {\n      notDeleted(builder) {\n        builder.whereNull("deleted_at");\n      },\n    };\n  }\n}\n\nBaseModel.knex(conn);\n')),(0,s.kt)("h2",{id:"update"},"Update"),(0,s.kt)("h2",{id:"appjs"},"app.js"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'import express from "express";\nimport bodyParser from "body-parser";\nimport cors from "cors";\nimport serverRoutes from "./routes/server";\nimport userRoutes from "./routes/user";\n\nconst app = express();\napp.use(cors());\napp.use(bodyParser.json());\napp.use(serverRoutes);\napp.use(userRoutes);\n\nexport default app;\n')))}m.isMDXComponent=!0}}]);